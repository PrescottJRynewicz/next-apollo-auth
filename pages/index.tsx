import styles from '/styles/Home.module.css';
import Head from 'next/head';
import Image from 'next/image';
import React, { CSSProperties } from 'react';
import Link from 'next/link';
import { signIn, signOut } from 'next-auth/client';
import styled, { keyframes } from 'styled-components';

const Container = styled.div`
  display: flex;
  flex-direction: row;
  background-color: green;
  height: 100vh;
  width: 100vw;
`;

const WaveAnimationRight = keyframes`
  50% {
    margin-left: 25vw;
  }
`;

const WaveAnimationLeft = keyframes`
  50% {
    width: 50%;
  }
`;

const Column = styled.div`
  display: flex;
  flex-direction: column;
  background-color: blue;
  height: 100%;
  width: 50%;
`;

const numRows = 100;
const initAnimationDelay = 1000;
const animationDelayDiff = 100;
const animationDurationMs = animationDelayDiff * numRows;

const Row = styled.div<{ position: 'left' | 'right' }>`
  border-radius: ${(props) =>
    props.position === 'right' ? '10px 0 0 10px' : '0 10px 10px 0'};
  background-color: blanchedalmond;
  height: ${100 / numRows}%;
  width: 100%;
  animation: ${(props) =>
    props.position === 'left' ? WaveAnimationLeft : WaveAnimationRight};
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-duration: ${5000}ms;
`;

export default function Home() {
  return (
    <Container>
      <Column>
        {new Array(numRows).fill(0).map((_value, index) => (
          <Row
            position="left"
            style={{
              animationDelay: `${
                initAnimationDelay + index * animationDelayDiff
              }ms`,
            }}
          />
        ))}
      </Column>
      <Column>
        {new Array(numRows).fill(0).map((_value, index) => (
          <Row
            position="right"
            style={{
              animationDelay: `${
                initAnimationDelay + index * animationDelayDiff
              }ms`,
            }}
          />
        ))}
      </Column>
    </Container>
  );
}

export function OldHome() {
  const buttonStyle: CSSProperties = {
    border: 'solid black',
    padding: '10px',
    backgroundColor: 'transparent',
    margin: '5px',
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Prescott&apos;s Test App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Explore the example pages in the{' '}
          <code className={styles.code}>/pages</code>
          directory
        </p>

        <div className={styles.grid}>
          <Link href="/static">
            <a style={buttonStyle}>Static Page</a>
          </Link>
          <Link href="/ssr">
            <a style={buttonStyle}>SSR Page</a>
          </Link>
          <Link href="/client">
            <a style={buttonStyle}>Client Rendered Page</a>
          </Link>
        </div>
        <div className={styles.grid}>
          <button style={buttonStyle} type="button" onClick={() => signIn()}>
            Sign In
          </button>
          <button style={buttonStyle} type="button" onClick={() => signOut()}>
            Sign Out
          </button>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer">
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
